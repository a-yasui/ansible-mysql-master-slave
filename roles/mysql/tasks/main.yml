- name: install the mysql rpm
  yum:
    name: "{{ mysql_yum_repository }}"
    state: present

- name: install the mysql
  yum: name={{ item }} state=present
  with_items: "{{ mysql_yum_packages }}"

- name: check if mysql log file size is 0 or not
  stat: path={{ mysql_log_file }}
  register: log_file
  changed_when: false

- name: initialize insecure mysql
  command: mysqld --initialize-insecure --user=mysql
  changed_when: false
  when: log_file.stat.size == 0

- name: start the mysqld
  service: name=mysqld state=started enabled=yes

- name: change the mysql from insecure to secure
  command: mysql -u root -e "{{ mysql_secure_installation_query }}"
  changed_when: false
  when: log_file.stat.size == 0

- name: create a log file to write the slow query
  file:
    path: "{{ mysql_slow_log_file }}"
    state: touch
    owner: mysql
    group: mysql
    mode: 0644
  when: log_file.stat.size == 0

- name: setting up to my.cnf
  blockinfile:
    path: /etc/my.cnf
    block: |
      {{ item.content }}
    marker: "# {mark} {{ item.name }}"
    validate: mysqld --defaults-file=%s --verbose --help
  with_items: "{{ mysql_my_cnf }}"
  register: config_file

- name: restart the mysqld
  service: name=mysqld state=restarted
  when: config_file.changed

- name: create replication user to master
  mysql_user:
    login_user: "{{ mysql_user_name }}"
    login_password: "{{ mysql_user_password }}"
    name: "{{ mysql_replication_user.name }}"
    host: "{{ mysql_replication_user.host | default('%') }}"
    password: "{{ mysql_replication_user.password }}"
    priv: "{{ mysql_replication_user_priv | default('*.*:REPLICATION SLAVE,REPLICATION CLIENT') }}"
    state: present
  when: >
    mysql_replication_role == 'master'
    and mysql_replication_master is defined
    and mysql_replication_user is defined

- name: get replication slave status to slave
  mysql_replication:
    mode: getslave
    login_user: "{{ mysql_user_name }}"
    login_password: "{{ mysql_user_password }}"
  register: slave
  when: >
    mysql_replication_role == 'slave'
    and mysql_replication_master is defined
    and mysql_replication_user is defined

- debug: msg={{ slave }}

- name: change replication master to slave
  mysql_replication:
    mode: changemaster
    login_user: "{{ mysql_user_name }}"
    login_password: "{{ mysql_user_password }}"
    master_host: "{{ mysql_replication_master.host }}"
    master_port: "{{ mysql_replication_master.port | default(3306) }}"
    master_user: "{{ mysql_replication_user.name }}"
    master_password: "{{ mysql_replication_user.password }}"
    master_auto_position: 1
  when: >
    mysql_replication_role == 'slave'
    and slave.Is_Slave is defined and not slave.Is_Slave
    and mysql_replication_master is defined
    and mysql_replication_user is defined

- name: start replication to slave
  mysql_replication:
    mode: startslave
    login_user: "{{ mysql_user_name }}"
    login_password: "{{ mysql_user_password }}"
  when: >
    mysql_replication_role == 'slave'
    and slave.Is_Slave is defined and not slave.Is_Slave
    and mysql_replication_master is defined
    and mysql_replication_user is defined